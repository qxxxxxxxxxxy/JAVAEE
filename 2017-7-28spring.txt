<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- 配置继承 使用parent属性 -->
	<!-- 抽象Bean 不能被实例化 只是一个模板 -->
	<!-- 若某一个bean的class属性没有指定,则该bean必须是一个抽象的 abstract="true" -->
	<bean id="address" p:city="Beijing^" p:street="HuangHe"></bean>
		
	<bean id="address2" p:street="hahaStreet" parent="address"></bean>
	    
	<bean id="car" class="SpringDemo3.Car" p:brand="Audi" p:price="30000"></bean>   
	
	<!-- 要求在配置Person时,必须有一个关联的car! 换句话说 person这个bean依赖于Car这个Bean -->
	<bean id="person" class="SpringDemo3.Person" p:name="tom" p:address-ref="address" depends-on="car"></bean>
	
	<!-- 作用域的使用    prototype是在创建实例的时候两个不同的实例 如果是默认的scope是singleton 创建的两个实例其实是一个实例 判等(==)的时候为相等的-->
	
	<bean id="person1" class="SpringDemo3.Person"p:name="aaaa"p:address="asdf"scope="prototype"></bean>
</beans>